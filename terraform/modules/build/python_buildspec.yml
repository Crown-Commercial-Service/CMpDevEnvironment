version: 0.2

phases:
  pre_build:
    commands:
      - $(aws ecr get-login --no-include-email)
      - if [ -e CCS_VERSION ]; then export CCS_VERSION=$(cat CCS_VERSION); else export CCS_VERSION=0.0.1; fi
      - pip install tox
      - tox
  build:
    commands:
      - docker build 
        --build-arg GIT_OWNER=${github_owner} 
        --build-arg GIT_REPO=${github_repo} 
        --build-arg GIT_BRANCH=${github_branch} 
        --build-arg GIT_COMMIT=$CODEBUILD_RESOLVED_SOURCE_VERSION
        --build-arg BUILD_TIME=$CODEBUILD_START_TIME
        --build-arg CCS_VERSION=$CCS_VERSION
        --tag "${container_prefix}/${container_name}" .
  post_build:
    commands:
      - docker tag "${container_prefix}/${container_name}" "${base_image_name}:$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - docker push "${base_image_name}:$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - docker tag "${container_prefix}/${container_name}" "${base_image_name}:$CCS_VERSION"
      - docker push "${base_image_name}:$CCS_VERSION"
      - docker tag "${container_prefix}/${container_name}" "${deploy_image_name}" 
      - docker push "${deploy_image_name}"
      - printf '[{"name":"${container_name}","imageUri":"%s"}]' "${deploy_image_name}" > images.json
artifacts:
    files: images.json